<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\WarehouseLoc;
use Illuminate\Support\Str;
use Illuminate\Database\Eloquent\Factories\HasFactory;


class WarehouselokController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */

    public function generateAutomaticCode()
    {
        $warehouse = WarehouseLoc::latest('id')->first();

        if ($warehouse) {
            // Parse the latest code and increment it
            $warehouseCode = $warehouse->code;
            $code = 'WRHS-' . str_pad((intval(substr($warehouseCode, -3)) + 1), 3, '0', STR_PAD_LEFT);
        } else {
            // If no previous COA exists, start with COA-001
            $code = 'WRHS-001';
        }

        return $code;
    }


    public function index()
    {
        $autoGeneratedCode = $this->generateAutomaticCode();
        $warehouse = WarehouseLoc::all();
        return view('pages.inventory.setting.warehouse.index', compact('warehouse','autoGeneratedCode'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $request->validate([
            'code' => 'required',
            'name' => 'required'
        ]);

        $uuid = Str::uuid()->toString();
        
        $wrhs = new WarehouseLoc();
        $wrhs->id = $uuid;
        $wrhs->code = $request->input('code');
        $wrhs->name = $request->input('name');
        $wrhs->save();

        return redirect()->route('warehouse-location.index')->with('success', 'Waraehouse Successfully Added');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        try {
            $wrhs = WarehouseLoc::findOrFail($id);
            $wrhs->name = $request->name;
            $wrhs->save();
            return redirect()->route('warehouse-location.index')->with('success', 'Warehouse Updated Successfully');
        } catch (ModelNotFoundException $e) {
            // Handle the case where the record with the specified $id is not found
            return redirect()->back()->withErrors('Data not found.');
        } catch (ValidationException $e) {
            // Handle the case where validation fails
            return redirect()->back()->withErrors($e->errors());
        } catch (\Exception $e) {
            // Handle other unexpected errors
            return redirect()->back()->withErrors('An error occurred while updating the data.');
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $warehouse = WarehouseLoc::find($id);

        if (!$warehouse){
            return redirect()->route('warehouse-location.index')->with('error', 'Warehouse not found');
        }

        $warehouse->delete();
        return redirect()->route('warehouse-location.index')->with('success', 'Warehouse Successfully Deleted');
    }
}
